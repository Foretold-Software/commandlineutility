# Copyright (c) Foretold Software, LLC. All rights reserved. Licensed under the Microsoft Public License (MS-PL). See the license.md file in the project root directory for full license information.

##################################################################################
#   Filename: azure-pipelines.yml
#
#   Description:
#       This file contains elements necessary to build, test,
#       and deploy the CommandLineUtility project.
#
##################################################################################

pool:
  vmImage: 'windows-latest'

variables:
  # Versioning variables
  Version.MajorMinor.NonReleaseDefault: '1.1'

  ${{ if startsWith(lower(variables['Build.SourceBranch']), 'refs/heads/release/') }}:
    Version.MajorMinor: $[variables['Build.SourceBranchName']]
  ${{ if not(startsWith(lower(variables['Build.SourceBranch']), 'refs/heads/release/')) }}:
    Version.MajorMinor: $[variables['Version.MajorMinor.NonReleaseDefault']]

  Version.Build.InitialValue: '100'
  Version.Build: $[counter(variables['Version.MajorMinor'], variables['Version.Build.InitialValue'])]
  Build.Version: $[format('{0}.{1}', variables['Version.MajorMinor'], variables['Version.Build'])]

  # Solution build variables
  Build.Solution: '**\*.sln'
  Build.Platform: 'Any CPU'
  Build.Configuration: 'Release'
  Build.Output.Directory: 'src\CommandLineUtility\bin\$(Build.Configuration)'
  Build.Output.NuGetPackage: '$(Build.Output.Directory)\*.nupkg'
  Source.License: 'license.md'


name: $(Build.Version)


stages:
- stage: build
  displayName: Build
  jobs:

  - job: build
    displayName: Build
    steps:

    - task: NuGetToolInstaller@1
      displayName: Nuget - Install tool

    - task: NuGetCommand@2
      displayName: Nuget - Restore
      inputs:
        restoreSolution: '$(Build.Solution)'

    - task: VSBuild@1
      displayName: Build solution
      inputs:
        solution: '$(Build.Solution)'
        platform: '$(Build.Platform)'
        configuration: '$(Build.Configuration)'
        msbuildArgs: '/p:Version=$(Build.Version)'

    - task: VSTest@2
      displayName: Run unit tests
      inputs:
        platform: '$(Build.Platform)'
        configuration: '$(Build.Configuration)'

    - task: NuGetCommand@2
      name: PushNugetPackage
      displayName: Nuget - Push to Feed
      inputs:
        command: 'push'
        packagesToPush: 'src/CommandLineUtility/**/*.nupkg;!src/CommandLineUtility/**/*.symbols.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'e2f9ae14-c675-4d64-b074-45655dbb4a2e/2ba4077c-73df-4cbb-b0d5-db3717286411'
